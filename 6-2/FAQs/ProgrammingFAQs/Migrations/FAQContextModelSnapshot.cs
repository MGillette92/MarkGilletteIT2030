// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProgrammingFAQs.Models;

namespace FAQs.Migrations
{
    [DbContext(typeof(FAQContext))]
    partial class FAQContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProgrammingFAQs.Models.Category", b =>
                {
                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categorys");

                    b.HasData(
                        new
                        {
                            CategoryID = "general",
                            Name = "General"
                        },
                        new
                        {
                            CategoryID = "history",
                            Name = "History"
                        });
                });

            modelBuilder.Entity("ProgrammingFAQs.Models.FAQ", b =>
                {
                    b.Property<int>("FAQID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FAQID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("TopicID");

                    b.ToTable("FAQs");

                    b.HasData(
                        new
                        {
                            FAQID = 1,
                            Answer = "C# was designed by Anders Hejlsberg from Microsoft in 2000.",
                            CategoryID = "history",
                            Question = "Who designed the C# programming language?",
                            TopicID = "csharp"
                        },
                        new
                        {
                            FAQID = 2,
                            Answer = "No, the C# language does not allow for global variables or functions.",
                            CategoryID = "general",
                            Question = "Does C# allow global variables?",
                            TopicID = "csharp"
                        },
                        new
                        {
                            FAQID = 3,
                            Answer = "Yes, Bootstrap is a free and open-source CSS framework.",
                            CategoryID = "general",
                            Question = "Is bootstrap free?",
                            TopicID = "bootstrap"
                        },
                        new
                        {
                            FAQID = 4,
                            Answer = "Bootstrap was created at Twitter in mid-2010 by Mark Otto and Jacob Thornton.",
                            CategoryID = "history",
                            Question = "When was bootstrap created?",
                            TopicID = "bootstrap"
                        },
                        new
                        {
                            FAQID = 5,
                            Answer = "Brendan Eich created JavaScript in 1995.",
                            CategoryID = "general",
                            Question = "Who created the JavaScript programming language?",
                            TopicID = "javascript"
                        },
                        new
                        {
                            FAQID = 6,
                            Answer = "JavaScript was originally called Mocha.",
                            CategoryID = "history",
                            Question = "What was JavaScript originally called?",
                            TopicID = "javascript"
                        });
                });

            modelBuilder.Entity("ProgrammingFAQs.Models.Topic", b =>
                {
                    b.Property<string>("TopicID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopicID");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            TopicID = "bootstrap",
                            Name = "Bootstrap"
                        },
                        new
                        {
                            TopicID = "csharp",
                            Name = "C#"
                        },
                        new
                        {
                            TopicID = "javascript",
                            Name = "JavaScript"
                        });
                });

            modelBuilder.Entity("ProgrammingFAQs.Models.FAQ", b =>
                {
                    b.HasOne("ProgrammingFAQs.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.HasOne("ProgrammingFAQs.Models.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicID");
                });
#pragma warning restore 612, 618
        }
    }
}
